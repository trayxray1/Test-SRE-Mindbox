# –°–∫—Ä–∏–ø—Ç —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è Mindbox SRE —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –¥–ª—è Windows
# –ê–≤—Ç–æ—Ä: SRE Engineer
# –î–∞—Ç–∞: $(Get-Date)

Write-Host "üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Mindbox SRE —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..." -ForegroundColor Green

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è curl –∏–ª–∏ PowerShell
$hasCurl = Get-Command curl -ErrorAction SilentlyContinue
if (-not $hasCurl) {
    Write-Host "‚ÑπÔ∏è curl –Ω–µ –Ω–∞–π–¥–µ–Ω, –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω PowerShell Invoke-WebRequest" -ForegroundColor Yellow
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –ø–æ–¥–æ–≤
Write-Host "üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –ø–æ–¥–æ–≤..." -ForegroundColor Yellow
kubectl get pods -n mindbox-sre-test

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
Write-Host "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..." -ForegroundColor Yellow
kubectl wait --for=condition=ready pod -l app=mindbox-app -n mindbox-sre-test --timeout=300s

# –ó–∞–ø—É—Å–∫ port-forward –≤ —Ñ–æ–Ω–µ
Write-Host "üîå –ó–∞–ø—É—Å–∫ port-forward..." -ForegroundColor Yellow
Start-Job -ScriptBlock { kubectl port-forward svc/mindbox-app-service 8080:80 -n mindbox-sre-test }

# –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –ø–æ—Ä—Ç–∞
Write-Host "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –ø–æ—Ä—Ç–∞..." -ForegroundColor Yellow
Start-Sleep -Seconds 10

# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤
Write-Host "üåê –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤..." -ForegroundColor Yellow

# –¢–µ—Å—Ç –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
Write-Host "üìÑ –¢–µ—Å—Ç –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã..." -ForegroundColor Yellow
try {
    if ($hasCurl) {
        $response = curl -f http://localhost:8080/ 2>$null
        if ($LASTEXITCODE -eq 0) {
            Write-Host "‚úÖ –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –¥–æ—Å—Ç—É–ø–Ω–∞" -ForegroundColor Green
        } else {
            Write-Host "‚ùå –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞" -ForegroundColor Red
        }
    } else {
        $response = Invoke-WebRequest -Uri "http://localhost:8080/" -UseBasicParsing -ErrorAction SilentlyContinue
        if ($response.StatusCode -eq 200) {
            Write-Host "‚úÖ –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –¥–æ—Å—Ç—É–ø–Ω–∞" -ForegroundColor Green
        } else {
            Write-Host "‚ùå –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞" -ForegroundColor Red
        }
    }
} catch {
    Write-Host "‚ùå –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞" -ForegroundColor Red
}

# –¢–µ—Å—Ç health check
Write-Host "‚ù§Ô∏è –¢–µ—Å—Ç health check..." -ForegroundColor Yellow
try {
    if ($hasCurl) {
        $response = curl -f http://localhost:8080/health 2>$null
        if ($LASTEXITCODE -eq 0) {
            Write-Host "‚úÖ Health check –ø—Ä–æ—à–µ–ª" -ForegroundColor Green
        } else {
            Write-Host "‚ùå Health check –Ω–µ –ø—Ä–æ—à–µ–ª" -ForegroundColor Red
        }
    } else {
        $response = Invoke-WebRequest -Uri "http://localhost:8080/health" -UseBasicParsing -ErrorAction SilentlyContinue
        if ($response.StatusCode -eq 200) {
            Write-Host "‚úÖ Health check –ø—Ä–æ—à–µ–ª" -ForegroundColor Green
        } else {
            Write-Host "‚ùå Health check –Ω–µ –ø—Ä–æ—à–µ–ª" -ForegroundColor Red
        }
    }
} catch {
    Write-Host "‚ùå Health check –Ω–µ –ø—Ä–æ—à–µ–ª" -ForegroundColor Red
}

# –¢–µ—Å—Ç readiness probe
Write-Host "‚úÖ –¢–µ—Å—Ç readiness probe..." -ForegroundColor Yellow
try {
    if ($hasCurl) {
        $response = curl -f http://localhost:8080/ready 2>$null
        if ($LASTEXITCODE -eq 0) {
            Write-Host "‚úÖ Readiness probe –ø—Ä–æ—à–µ–ª" -ForegroundColor Green
        } else {
            Write-Host "‚ùå Readiness probe –Ω–µ –ø—Ä–æ—à–µ–ª" -ForegroundColor Red
        }
    } else {
        $response = Invoke-WebRequest -Uri "http://localhost:8080/ready" -UseBasicParsing -ErrorAction SilentlyContinue
        if ($response.StatusCode -eq 200) {
            Write-Host "‚úÖ Readiness probe –ø—Ä–æ—à–µ–ª" -ForegroundColor Green
        } else {
            Write-Host "‚ùå Readiness probe –Ω–µ –ø—Ä–æ—à–µ–ª" -ForegroundColor Red
        }
    }
} catch {
    Write-Host "‚ùå Readiness probe –Ω–µ –ø—Ä–æ—à–µ–ª" -ForegroundColor Red
}

# –¢–µ—Å—Ç liveness probe
Write-Host "üíì –¢–µ—Å—Ç liveness probe..." -ForegroundColor Yellow
try {
    if ($hasCurl) {
        $response = curl -f http://localhost:8080/live 2>$null
        if ($LASTEXITCODE -eq 0) {
            Write-Host "‚úÖ Liveness probe –ø—Ä–æ—à–µ–ª" -ForegroundColor Green
        } else {
            Write-Host "‚ùå Liveness probe –Ω–µ –ø—Ä–æ—à–µ–ª" -ForegroundColor Red
        }
    } else {
        $response = Invoke-WebRequest -Uri "http://localhost:8080/live" -UseBasicParsing -ErrorAction SilentlyContinue
        if ($response.StatusCode -eq 200) {
            Write-Host "‚úÖ Liveness probe –ø—Ä–æ—à–µ–ª" -ForegroundColor Green
        } else {
            Write-Host "‚ùå Liveness probe –Ω–µ –ø—Ä–æ—à–µ–ª" -ForegroundColor Red
        }
    }
} catch {
    Write-Host "‚ùå Liveness probe –Ω–µ –ø—Ä–æ—à–µ–ª" -ForegroundColor Red
}

# –¢–µ—Å—Ç –º–µ—Ç—Ä–∏–∫
Write-Host "üìä –¢–µ—Å—Ç –º–µ—Ç—Ä–∏–∫..." -ForegroundColor Yellow
try {
    if ($hasCurl) {
        $response = curl -f http://localhost:8080/metrics 2>$null
        if ($LASTEXITCODE -eq 0) {
            Write-Host "‚úÖ –ú–µ—Ç—Ä–∏–∫–∏ –¥–æ—Å—Ç—É–ø–Ω—ã" -ForegroundColor Green
        } else {
            Write-Host "‚ùå –ú–µ—Ç—Ä–∏–∫–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã" -ForegroundColor Red
        }
    } else {
        $response = Invoke-WebRequest -Uri "http://localhost:8080/metrics" -UseBasicParsing -ErrorAction SilentlyContinue
        if ($response.StatusCode -eq 200) {
            Write-Host "‚úÖ –ú–µ—Ç—Ä–∏–∫–∏ –¥–æ—Å—Ç—É–ø–Ω—ã" -ForegroundColor Green
        } else {
            Write-Host "‚ùå –ú–µ—Ç—Ä–∏–∫–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã" -ForegroundColor Red
        }
    }
} catch {
    Write-Host "‚ùå –ú–µ—Ç—Ä–∏–∫–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã" -ForegroundColor Red
}

# –¢–µ—Å—Ç –Ω–∞–≥—Ä—É–∑–∫–∏
Write-Host "‚ö° –¢–µ—Å—Ç –Ω–∞–≥—Ä—É–∑–∫–∏..." -ForegroundColor Yellow
try {
    if ($hasCurl) {
        $response = curl -f http://localhost:8080/load-test 2>$null
        if ($LASTEXITCODE -eq 0) {
            Write-Host "‚úÖ –¢–µ—Å—Ç –Ω–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–æ—à–µ–ª" -ForegroundColor Green
        } else {
            Write-Host "‚ùå –¢–µ—Å—Ç –Ω–∞–≥—Ä—É–∑–∫–∏ –Ω–µ –ø—Ä–æ—à–µ–ª" -ForegroundColor Red
        }
    } else {
        $response = Invoke-WebRequest -Uri "http://localhost:8080/load-test" -UseBasicParsing -ErrorAction SilentlyContinue
        if ($response.StatusCode -eq 200) {
            Write-Host "‚úÖ –¢–µ—Å—Ç –Ω–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–æ—à–µ–ª" -ForegroundColor Green
        } else {
            Write-Host "‚ùå –¢–µ—Å—Ç –Ω–∞–≥—Ä—É–∑–∫–∏ –Ω–µ –ø—Ä–æ—à–µ–ª" -ForegroundColor Red
        }
    }
} catch {
    Write-Host "‚ùå –¢–µ—Å—Ç –Ω–∞–≥—Ä—É–∑–∫–∏ –Ω–µ –ø—Ä–æ—à–µ–ª" -ForegroundColor Red
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ HPA
Write-Host "üìà –ü—Ä–æ–≤–µ—Ä–∫–∞ HPA..." -ForegroundColor Yellow
kubectl get hpa -n mindbox-sre-test

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ—Å—É—Ä—Å–æ–≤
Write-Host "üíæ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ—Å—É—Ä—Å–æ–≤..." -ForegroundColor Yellow
kubectl top pods -n mindbox-sre-test

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–±—ã—Ç–∏–π
Write-Host "üìù –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–±—ã—Ç–∏–π..." -ForegroundColor Yellow
kubectl get events -n mindbox-sre-test --sort-by='.lastTimestamp'

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ port-forward
Write-Host "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ port-forward..." -ForegroundColor Yellow
Get-Job | Stop-Job
Get-Job | Remove-Job

Write-Host ""
Write-Host "‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!" -ForegroundColor Green
Write-Host ""
Write-Host "üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:" -ForegroundColor Cyan
Write-Host "   - –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç–æ –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç" -ForegroundColor White
Write-Host "   - –í—Å–µ —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã –¥–æ—Å—Ç—É–ø–Ω—ã" -ForegroundColor White
Write-Host "   - HPA –Ω–∞—Å—Ç—Ä–æ–µ–Ω –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç" -ForegroundColor White
Write-Host "   - –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –Ω–∞—Å—Ç—Ä–æ–µ–Ω" -ForegroundColor White
Write-Host ""
Write-Host "üöÄ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≥–æ—Ç–æ–≤–æ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!" -ForegroundColor Green 